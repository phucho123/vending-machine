circuit Display :
  module BCDTable :
    input clock : Clock
    input reset : Reset
    output io : { flip switchIn : UInt<8>, BCDn : UInt<8>}

    wire table : UInt<8>[100] @[BCDTable.scala 10:19]
    table[0] <= UInt<1>("h0") @[BCDTable.scala 13:14]
    table[1] <= UInt<1>("h1") @[BCDTable.scala 13:14]
    table[2] <= UInt<2>("h2") @[BCDTable.scala 13:14]
    table[3] <= UInt<2>("h3") @[BCDTable.scala 13:14]
    table[4] <= UInt<3>("h4") @[BCDTable.scala 13:14]
    table[5] <= UInt<3>("h5") @[BCDTable.scala 13:14]
    table[6] <= UInt<3>("h6") @[BCDTable.scala 13:14]
    table[7] <= UInt<3>("h7") @[BCDTable.scala 13:14]
    table[8] <= UInt<4>("h8") @[BCDTable.scala 13:14]
    table[9] <= UInt<4>("h9") @[BCDTable.scala 13:14]
    table[10] <= UInt<5>("h10") @[BCDTable.scala 13:14]
    table[11] <= UInt<5>("h11") @[BCDTable.scala 13:14]
    table[12] <= UInt<5>("h12") @[BCDTable.scala 13:14]
    table[13] <= UInt<5>("h13") @[BCDTable.scala 13:14]
    table[14] <= UInt<5>("h14") @[BCDTable.scala 13:14]
    table[15] <= UInt<5>("h15") @[BCDTable.scala 13:14]
    table[16] <= UInt<5>("h16") @[BCDTable.scala 13:14]
    table[17] <= UInt<5>("h17") @[BCDTable.scala 13:14]
    table[18] <= UInt<5>("h18") @[BCDTable.scala 13:14]
    table[19] <= UInt<5>("h19") @[BCDTable.scala 13:14]
    table[20] <= UInt<6>("h20") @[BCDTable.scala 13:14]
    table[21] <= UInt<6>("h21") @[BCDTable.scala 13:14]
    table[22] <= UInt<6>("h22") @[BCDTable.scala 13:14]
    table[23] <= UInt<6>("h23") @[BCDTable.scala 13:14]
    table[24] <= UInt<6>("h24") @[BCDTable.scala 13:14]
    table[25] <= UInt<6>("h25") @[BCDTable.scala 13:14]
    table[26] <= UInt<6>("h26") @[BCDTable.scala 13:14]
    table[27] <= UInt<6>("h27") @[BCDTable.scala 13:14]
    table[28] <= UInt<6>("h28") @[BCDTable.scala 13:14]
    table[29] <= UInt<6>("h29") @[BCDTable.scala 13:14]
    table[30] <= UInt<6>("h30") @[BCDTable.scala 13:14]
    table[31] <= UInt<6>("h31") @[BCDTable.scala 13:14]
    table[32] <= UInt<6>("h32") @[BCDTable.scala 13:14]
    table[33] <= UInt<6>("h33") @[BCDTable.scala 13:14]
    table[34] <= UInt<6>("h34") @[BCDTable.scala 13:14]
    table[35] <= UInt<6>("h35") @[BCDTable.scala 13:14]
    table[36] <= UInt<6>("h36") @[BCDTable.scala 13:14]
    table[37] <= UInt<6>("h37") @[BCDTable.scala 13:14]
    table[38] <= UInt<6>("h38") @[BCDTable.scala 13:14]
    table[39] <= UInt<6>("h39") @[BCDTable.scala 13:14]
    table[40] <= UInt<7>("h40") @[BCDTable.scala 13:14]
    table[41] <= UInt<7>("h41") @[BCDTable.scala 13:14]
    table[42] <= UInt<7>("h42") @[BCDTable.scala 13:14]
    table[43] <= UInt<7>("h43") @[BCDTable.scala 13:14]
    table[44] <= UInt<7>("h44") @[BCDTable.scala 13:14]
    table[45] <= UInt<7>("h45") @[BCDTable.scala 13:14]
    table[46] <= UInt<7>("h46") @[BCDTable.scala 13:14]
    table[47] <= UInt<7>("h47") @[BCDTable.scala 13:14]
    table[48] <= UInt<7>("h48") @[BCDTable.scala 13:14]
    table[49] <= UInt<7>("h49") @[BCDTable.scala 13:14]
    table[50] <= UInt<7>("h50") @[BCDTable.scala 13:14]
    table[51] <= UInt<7>("h51") @[BCDTable.scala 13:14]
    table[52] <= UInt<7>("h52") @[BCDTable.scala 13:14]
    table[53] <= UInt<7>("h53") @[BCDTable.scala 13:14]
    table[54] <= UInt<7>("h54") @[BCDTable.scala 13:14]
    table[55] <= UInt<7>("h55") @[BCDTable.scala 13:14]
    table[56] <= UInt<7>("h56") @[BCDTable.scala 13:14]
    table[57] <= UInt<7>("h57") @[BCDTable.scala 13:14]
    table[58] <= UInt<7>("h58") @[BCDTable.scala 13:14]
    table[59] <= UInt<7>("h59") @[BCDTable.scala 13:14]
    table[60] <= UInt<7>("h60") @[BCDTable.scala 13:14]
    table[61] <= UInt<7>("h61") @[BCDTable.scala 13:14]
    table[62] <= UInt<7>("h62") @[BCDTable.scala 13:14]
    table[63] <= UInt<7>("h63") @[BCDTable.scala 13:14]
    table[64] <= UInt<7>("h64") @[BCDTable.scala 13:14]
    table[65] <= UInt<7>("h65") @[BCDTable.scala 13:14]
    table[66] <= UInt<7>("h66") @[BCDTable.scala 13:14]
    table[67] <= UInt<7>("h67") @[BCDTable.scala 13:14]
    table[68] <= UInt<7>("h68") @[BCDTable.scala 13:14]
    table[69] <= UInt<7>("h69") @[BCDTable.scala 13:14]
    table[70] <= UInt<7>("h70") @[BCDTable.scala 13:14]
    table[71] <= UInt<7>("h71") @[BCDTable.scala 13:14]
    table[72] <= UInt<7>("h72") @[BCDTable.scala 13:14]
    table[73] <= UInt<7>("h73") @[BCDTable.scala 13:14]
    table[74] <= UInt<7>("h74") @[BCDTable.scala 13:14]
    table[75] <= UInt<7>("h75") @[BCDTable.scala 13:14]
    table[76] <= UInt<7>("h76") @[BCDTable.scala 13:14]
    table[77] <= UInt<7>("h77") @[BCDTable.scala 13:14]
    table[78] <= UInt<7>("h78") @[BCDTable.scala 13:14]
    table[79] <= UInt<7>("h79") @[BCDTable.scala 13:14]
    table[80] <= UInt<8>("h80") @[BCDTable.scala 13:14]
    table[81] <= UInt<8>("h81") @[BCDTable.scala 13:14]
    table[82] <= UInt<8>("h82") @[BCDTable.scala 13:14]
    table[83] <= UInt<8>("h83") @[BCDTable.scala 13:14]
    table[84] <= UInt<8>("h84") @[BCDTable.scala 13:14]
    table[85] <= UInt<8>("h85") @[BCDTable.scala 13:14]
    table[86] <= UInt<8>("h86") @[BCDTable.scala 13:14]
    table[87] <= UInt<8>("h87") @[BCDTable.scala 13:14]
    table[88] <= UInt<8>("h88") @[BCDTable.scala 13:14]
    table[89] <= UInt<8>("h89") @[BCDTable.scala 13:14]
    table[90] <= UInt<8>("h90") @[BCDTable.scala 13:14]
    table[91] <= UInt<8>("h91") @[BCDTable.scala 13:14]
    table[92] <= UInt<8>("h92") @[BCDTable.scala 13:14]
    table[93] <= UInt<8>("h93") @[BCDTable.scala 13:14]
    table[94] <= UInt<8>("h94") @[BCDTable.scala 13:14]
    table[95] <= UInt<8>("h95") @[BCDTable.scala 13:14]
    table[96] <= UInt<8>("h96") @[BCDTable.scala 13:14]
    table[97] <= UInt<8>("h97") @[BCDTable.scala 13:14]
    table[98] <= UInt<8>("h98") @[BCDTable.scala 13:14]
    table[99] <= UInt<8>("h99") @[BCDTable.scala 13:14]
    node _io_BCDn_T = bits(io.switchIn, 6, 0)
    io.BCDn <= table[_io_BCDn_T] @[BCDTable.scala 16:11]

  module BCDTable_1 :
    input clock : Clock
    input reset : Reset
    output io : { flip switchIn : UInt<8>, BCDn : UInt<8>}

    wire table : UInt<8>[100] @[BCDTable.scala 10:19]
    table[0] <= UInt<1>("h0") @[BCDTable.scala 13:14]
    table[1] <= UInt<1>("h1") @[BCDTable.scala 13:14]
    table[2] <= UInt<2>("h2") @[BCDTable.scala 13:14]
    table[3] <= UInt<2>("h3") @[BCDTable.scala 13:14]
    table[4] <= UInt<3>("h4") @[BCDTable.scala 13:14]
    table[5] <= UInt<3>("h5") @[BCDTable.scala 13:14]
    table[6] <= UInt<3>("h6") @[BCDTable.scala 13:14]
    table[7] <= UInt<3>("h7") @[BCDTable.scala 13:14]
    table[8] <= UInt<4>("h8") @[BCDTable.scala 13:14]
    table[9] <= UInt<4>("h9") @[BCDTable.scala 13:14]
    table[10] <= UInt<5>("h10") @[BCDTable.scala 13:14]
    table[11] <= UInt<5>("h11") @[BCDTable.scala 13:14]
    table[12] <= UInt<5>("h12") @[BCDTable.scala 13:14]
    table[13] <= UInt<5>("h13") @[BCDTable.scala 13:14]
    table[14] <= UInt<5>("h14") @[BCDTable.scala 13:14]
    table[15] <= UInt<5>("h15") @[BCDTable.scala 13:14]
    table[16] <= UInt<5>("h16") @[BCDTable.scala 13:14]
    table[17] <= UInt<5>("h17") @[BCDTable.scala 13:14]
    table[18] <= UInt<5>("h18") @[BCDTable.scala 13:14]
    table[19] <= UInt<5>("h19") @[BCDTable.scala 13:14]
    table[20] <= UInt<6>("h20") @[BCDTable.scala 13:14]
    table[21] <= UInt<6>("h21") @[BCDTable.scala 13:14]
    table[22] <= UInt<6>("h22") @[BCDTable.scala 13:14]
    table[23] <= UInt<6>("h23") @[BCDTable.scala 13:14]
    table[24] <= UInt<6>("h24") @[BCDTable.scala 13:14]
    table[25] <= UInt<6>("h25") @[BCDTable.scala 13:14]
    table[26] <= UInt<6>("h26") @[BCDTable.scala 13:14]
    table[27] <= UInt<6>("h27") @[BCDTable.scala 13:14]
    table[28] <= UInt<6>("h28") @[BCDTable.scala 13:14]
    table[29] <= UInt<6>("h29") @[BCDTable.scala 13:14]
    table[30] <= UInt<6>("h30") @[BCDTable.scala 13:14]
    table[31] <= UInt<6>("h31") @[BCDTable.scala 13:14]
    table[32] <= UInt<6>("h32") @[BCDTable.scala 13:14]
    table[33] <= UInt<6>("h33") @[BCDTable.scala 13:14]
    table[34] <= UInt<6>("h34") @[BCDTable.scala 13:14]
    table[35] <= UInt<6>("h35") @[BCDTable.scala 13:14]
    table[36] <= UInt<6>("h36") @[BCDTable.scala 13:14]
    table[37] <= UInt<6>("h37") @[BCDTable.scala 13:14]
    table[38] <= UInt<6>("h38") @[BCDTable.scala 13:14]
    table[39] <= UInt<6>("h39") @[BCDTable.scala 13:14]
    table[40] <= UInt<7>("h40") @[BCDTable.scala 13:14]
    table[41] <= UInt<7>("h41") @[BCDTable.scala 13:14]
    table[42] <= UInt<7>("h42") @[BCDTable.scala 13:14]
    table[43] <= UInt<7>("h43") @[BCDTable.scala 13:14]
    table[44] <= UInt<7>("h44") @[BCDTable.scala 13:14]
    table[45] <= UInt<7>("h45") @[BCDTable.scala 13:14]
    table[46] <= UInt<7>("h46") @[BCDTable.scala 13:14]
    table[47] <= UInt<7>("h47") @[BCDTable.scala 13:14]
    table[48] <= UInt<7>("h48") @[BCDTable.scala 13:14]
    table[49] <= UInt<7>("h49") @[BCDTable.scala 13:14]
    table[50] <= UInt<7>("h50") @[BCDTable.scala 13:14]
    table[51] <= UInt<7>("h51") @[BCDTable.scala 13:14]
    table[52] <= UInt<7>("h52") @[BCDTable.scala 13:14]
    table[53] <= UInt<7>("h53") @[BCDTable.scala 13:14]
    table[54] <= UInt<7>("h54") @[BCDTable.scala 13:14]
    table[55] <= UInt<7>("h55") @[BCDTable.scala 13:14]
    table[56] <= UInt<7>("h56") @[BCDTable.scala 13:14]
    table[57] <= UInt<7>("h57") @[BCDTable.scala 13:14]
    table[58] <= UInt<7>("h58") @[BCDTable.scala 13:14]
    table[59] <= UInt<7>("h59") @[BCDTable.scala 13:14]
    table[60] <= UInt<7>("h60") @[BCDTable.scala 13:14]
    table[61] <= UInt<7>("h61") @[BCDTable.scala 13:14]
    table[62] <= UInt<7>("h62") @[BCDTable.scala 13:14]
    table[63] <= UInt<7>("h63") @[BCDTable.scala 13:14]
    table[64] <= UInt<7>("h64") @[BCDTable.scala 13:14]
    table[65] <= UInt<7>("h65") @[BCDTable.scala 13:14]
    table[66] <= UInt<7>("h66") @[BCDTable.scala 13:14]
    table[67] <= UInt<7>("h67") @[BCDTable.scala 13:14]
    table[68] <= UInt<7>("h68") @[BCDTable.scala 13:14]
    table[69] <= UInt<7>("h69") @[BCDTable.scala 13:14]
    table[70] <= UInt<7>("h70") @[BCDTable.scala 13:14]
    table[71] <= UInt<7>("h71") @[BCDTable.scala 13:14]
    table[72] <= UInt<7>("h72") @[BCDTable.scala 13:14]
    table[73] <= UInt<7>("h73") @[BCDTable.scala 13:14]
    table[74] <= UInt<7>("h74") @[BCDTable.scala 13:14]
    table[75] <= UInt<7>("h75") @[BCDTable.scala 13:14]
    table[76] <= UInt<7>("h76") @[BCDTable.scala 13:14]
    table[77] <= UInt<7>("h77") @[BCDTable.scala 13:14]
    table[78] <= UInt<7>("h78") @[BCDTable.scala 13:14]
    table[79] <= UInt<7>("h79") @[BCDTable.scala 13:14]
    table[80] <= UInt<8>("h80") @[BCDTable.scala 13:14]
    table[81] <= UInt<8>("h81") @[BCDTable.scala 13:14]
    table[82] <= UInt<8>("h82") @[BCDTable.scala 13:14]
    table[83] <= UInt<8>("h83") @[BCDTable.scala 13:14]
    table[84] <= UInt<8>("h84") @[BCDTable.scala 13:14]
    table[85] <= UInt<8>("h85") @[BCDTable.scala 13:14]
    table[86] <= UInt<8>("h86") @[BCDTable.scala 13:14]
    table[87] <= UInt<8>("h87") @[BCDTable.scala 13:14]
    table[88] <= UInt<8>("h88") @[BCDTable.scala 13:14]
    table[89] <= UInt<8>("h89") @[BCDTable.scala 13:14]
    table[90] <= UInt<8>("h90") @[BCDTable.scala 13:14]
    table[91] <= UInt<8>("h91") @[BCDTable.scala 13:14]
    table[92] <= UInt<8>("h92") @[BCDTable.scala 13:14]
    table[93] <= UInt<8>("h93") @[BCDTable.scala 13:14]
    table[94] <= UInt<8>("h94") @[BCDTable.scala 13:14]
    table[95] <= UInt<8>("h95") @[BCDTable.scala 13:14]
    table[96] <= UInt<8>("h96") @[BCDTable.scala 13:14]
    table[97] <= UInt<8>("h97") @[BCDTable.scala 13:14]
    table[98] <= UInt<8>("h98") @[BCDTable.scala 13:14]
    table[99] <= UInt<8>("h99") @[BCDTable.scala 13:14]
    node _io_BCDn_T = bits(io.switchIn, 6, 0)
    io.BCDn <= table[_io_BCDn_T] @[BCDTable.scala 16:11]

  module SevenSegDec :
    input clock : Clock
    input reset : Reset
    output io : { flip in : UInt<4>, out : UInt<7>}

    wire sevSeg : UInt<8> @[SevenSegDec.scala 10:27]
    sevSeg <= UInt<8>("h0") @[SevenSegDec.scala 10:27]
    node _T = eq(UInt<1>("h0"), io.in) @[SevenSegDec.scala 13:16]
    when _T : @[SevenSegDec.scala 13:16]
      sevSeg <= UInt<7>("h40") @[SevenSegDec.scala 15:26]
    else :
      node _T_1 = eq(UInt<1>("h1"), io.in) @[SevenSegDec.scala 13:16]
      when _T_1 : @[SevenSegDec.scala 13:16]
        sevSeg <= UInt<7>("h79") @[SevenSegDec.scala 16:26]
      else :
        node _T_2 = eq(UInt<2>("h2"), io.in) @[SevenSegDec.scala 13:16]
        when _T_2 : @[SevenSegDec.scala 13:16]
          sevSeg <= UInt<6>("h24") @[SevenSegDec.scala 17:26]
        else :
          node _T_3 = eq(UInt<2>("h3"), io.in) @[SevenSegDec.scala 13:16]
          when _T_3 : @[SevenSegDec.scala 13:16]
            sevSeg <= UInt<6>("h30") @[SevenSegDec.scala 18:26]
          else :
            node _T_4 = eq(UInt<3>("h4"), io.in) @[SevenSegDec.scala 13:16]
            when _T_4 : @[SevenSegDec.scala 13:16]
              sevSeg <= UInt<5>("h19") @[SevenSegDec.scala 19:26]
            else :
              node _T_5 = eq(UInt<3>("h5"), io.in) @[SevenSegDec.scala 13:16]
              when _T_5 : @[SevenSegDec.scala 13:16]
                sevSeg <= UInt<5>("h12") @[SevenSegDec.scala 20:26]
              else :
                node _T_6 = eq(UInt<3>("h6"), io.in) @[SevenSegDec.scala 13:16]
                when _T_6 : @[SevenSegDec.scala 13:16]
                  sevSeg <= UInt<2>("h2") @[SevenSegDec.scala 21:26]
                else :
                  node _T_7 = eq(UInt<3>("h7"), io.in) @[SevenSegDec.scala 13:16]
                  when _T_7 : @[SevenSegDec.scala 13:16]
                    sevSeg <= UInt<7>("h78") @[SevenSegDec.scala 22:26]
                  else :
                    node _T_8 = eq(UInt<4>("h8"), io.in) @[SevenSegDec.scala 13:16]
                    when _T_8 : @[SevenSegDec.scala 13:16]
                      sevSeg <= UInt<1>("h0") @[SevenSegDec.scala 23:26]
                    else :
                      node _T_9 = eq(UInt<4>("h9"), io.in) @[SevenSegDec.scala 13:16]
                      when _T_9 : @[SevenSegDec.scala 13:16]
                        sevSeg <= UInt<5>("h18") @[SevenSegDec.scala 24:26]
                      else :
                        node _T_10 = eq(UInt<4>("ha"), io.in) @[SevenSegDec.scala 13:16]
                        when _T_10 : @[SevenSegDec.scala 13:16]
                          sevSeg <= UInt<3>("h6") @[SevenSegDec.scala 26:26]
                        else :
                          node _T_11 = eq(UInt<4>("hb"), io.in) @[SevenSegDec.scala 13:16]
                          when _T_11 : @[SevenSegDec.scala 13:16]
                            sevSeg <= UInt<4>("hc") @[SevenSegDec.scala 27:26]
                          else :
                            node _T_12 = eq(UInt<4>("hc"), io.in) @[SevenSegDec.scala 13:16]
                            when _T_12 : @[SevenSegDec.scala 13:16]
                              sevSeg <= UInt<3>("h7") @[SevenSegDec.scala 28:26]
                            else :
                              node _T_13 = eq(UInt<4>("hd"), io.in) @[SevenSegDec.scala 13:16]
                              when _T_13 : @[SevenSegDec.scala 13:16]
                                sevSeg <= UInt<5>("h11") @[SevenSegDec.scala 29:26]
                              else :
                                node _T_14 = eq(UInt<4>("he"), io.in) @[SevenSegDec.scala 13:16]
                                when _T_14 : @[SevenSegDec.scala 13:16]
                                  sevSeg <= UInt<1>("h0") @[SevenSegDec.scala 31:26]
                                else :
                                  node _T_15 = eq(UInt<4>("hf"), io.in) @[SevenSegDec.scala 13:16]
                                  when _T_15 : @[SevenSegDec.scala 13:16]
                                    sevSeg <= UInt<1>("h0") @[SevenSegDec.scala 32:26]
    io.out <= sevSeg @[SevenSegDec.scala 36:10]

  module DisplayMultiplexer :
    input clock : Clock
    input reset : Reset
    output io : { flip sum : UInt<7>, flip price : UInt<5>, flip cans : UInt<8>, seg : UInt<7>, an : UInt<4>}

    wire sevSeg : UInt<7> @[DisplayMultiplexer.scala 13:27]
    sevSeg <= UInt<7>("h7f") @[DisplayMultiplexer.scala 13:27]
    wire select : UInt<4> @[DisplayMultiplexer.scala 14:27]
    select <= UInt<4>("h1") @[DisplayMultiplexer.scala 14:27]
    inst BCDPrice of BCDTable @[DisplayMultiplexer.scala 18:24]
    BCDPrice.clock <= clock
    BCDPrice.reset <= reset
    BCDPrice.io.switchIn <= io.price @[DisplayMultiplexer.scala 19:24]
    inst BCDSum of BCDTable_1 @[DisplayMultiplexer.scala 20:22]
    BCDSum.clock <= clock
    BCDSum.reset <= reset
    BCDSum.io.switchIn <= io.sum @[DisplayMultiplexer.scala 21:22]
    inst sevDis of SevenSegDec @[DisplayMultiplexer.scala 22:22]
    sevDis.clock <= clock
    sevDis.reset <= reset
    sevDis.io.in <= UInt<1>("h0") @[DisplayMultiplexer.scala 23:16]
    reg reg100k : UInt<20>, clock with :
      reset => (reset, UInt<20>("h0")) @[DisplayMultiplexer.scala 25:24]
    reg selectReg : UInt<4>, clock with :
      reset => (reset, UInt<4>("h8")) @[DisplayMultiplexer.scala 26:26]
    select <= selectReg @[DisplayMultiplexer.scala 28:10]
    node _reg100k_T = add(reg100k, UInt<1>("h1")) @[DisplayMultiplexer.scala 30:22]
    node _reg100k_T_1 = tail(_reg100k_T, 1) @[DisplayMultiplexer.scala 30:22]
    reg100k <= _reg100k_T_1 @[DisplayMultiplexer.scala 30:11]
    node _T = eq(reg100k, UInt<17>("h186a0")) @[DisplayMultiplexer.scala 32:16]
    when _T : @[DisplayMultiplexer.scala 32:29]
      reg100k <= UInt<1>("h0") @[DisplayMultiplexer.scala 33:13]
      node _T_1 = eq(selectReg, UInt<1>("h1")) @[DisplayMultiplexer.scala 35:20]
      when _T_1 : @[DisplayMultiplexer.scala 35:34]
        selectReg <= UInt<4>("h8") @[DisplayMultiplexer.scala 36:17]
      else :
        node _selectReg_T = shr(selectReg, 1) @[DisplayMultiplexer.scala 38:30]
        selectReg <= _selectReg_T @[DisplayMultiplexer.scala 38:17]
    sevSeg <= sevDis.io.out @[DisplayMultiplexer.scala 43:10]
    node _T_2 = eq(io.cans, UInt<1>("h0")) @[DisplayMultiplexer.scala 45:16]
    when _T_2 : @[DisplayMultiplexer.scala 45:24]
      node _T_3 = eq(UInt<1>("h1"), selectReg) @[DisplayMultiplexer.scala 46:22]
      when _T_3 : @[DisplayMultiplexer.scala 46:22]
        sevDis.io.in <= UInt<4>("hd") @[DisplayMultiplexer.scala 47:34]
      else :
        node _T_4 = eq(UInt<2>("h2"), selectReg) @[DisplayMultiplexer.scala 46:22]
        when _T_4 : @[DisplayMultiplexer.scala 46:22]
          sevDis.io.in <= UInt<4>("hc") @[DisplayMultiplexer.scala 48:34]
        else :
          node _T_5 = eq(UInt<3>("h4"), selectReg) @[DisplayMultiplexer.scala 46:22]
          when _T_5 : @[DisplayMultiplexer.scala 46:22]
            sevDis.io.in <= UInt<4>("hb") @[DisplayMultiplexer.scala 49:34]
          else :
            node _T_6 = eq(UInt<4>("h8"), selectReg) @[DisplayMultiplexer.scala 46:22]
            when _T_6 : @[DisplayMultiplexer.scala 46:22]
              sevDis.io.in <= UInt<4>("ha") @[DisplayMultiplexer.scala 50:34]
    else :
      node _T_7 = eq(UInt<1>("h1"), selectReg) @[DisplayMultiplexer.scala 53:23]
      when _T_7 : @[DisplayMultiplexer.scala 53:23]
        node _sevDis_io_in_T = bits(BCDPrice.io.BCDn, 3, 0) @[DisplayMultiplexer.scala 54:54]
        sevDis.io.in <= _sevDis_io_in_T @[DisplayMultiplexer.scala 54:35]
      else :
        node _T_8 = eq(UInt<2>("h2"), selectReg) @[DisplayMultiplexer.scala 53:23]
        when _T_8 : @[DisplayMultiplexer.scala 53:23]
          node _sevDis_io_in_T_1 = bits(BCDPrice.io.BCDn, 7, 4) @[DisplayMultiplexer.scala 55:54]
          sevDis.io.in <= _sevDis_io_in_T_1 @[DisplayMultiplexer.scala 55:35]
        else :
          node _T_9 = eq(UInt<3>("h4"), selectReg) @[DisplayMultiplexer.scala 53:23]
          when _T_9 : @[DisplayMultiplexer.scala 53:23]
            node _sevDis_io_in_T_2 = bits(BCDSum.io.BCDn, 3, 0) @[DisplayMultiplexer.scala 56:52]
            sevDis.io.in <= _sevDis_io_in_T_2 @[DisplayMultiplexer.scala 56:35]
          else :
            node _T_10 = eq(UInt<4>("h8"), selectReg) @[DisplayMultiplexer.scala 53:23]
            when _T_10 : @[DisplayMultiplexer.scala 53:23]
              node _sevDis_io_in_T_3 = bits(BCDSum.io.BCDn, 7, 4) @[DisplayMultiplexer.scala 57:52]
              sevDis.io.in <= _sevDis_io_in_T_3 @[DisplayMultiplexer.scala 57:35]
    io.seg <= sevSeg @[DisplayMultiplexer.scala 63:10]
    node _io_an_T = not(select) @[DisplayMultiplexer.scala 64:12]
    io.an <= _io_an_T @[DisplayMultiplexer.scala 64:9]

  module Display :
    input clock : Clock
    input reset : UInt<1>
    output io : { flip price : UInt<5>, flip sum : UInt<7>, flip cans : UInt<8>, seg : UInt<7>, an : UInt<4>}

    inst dispMux of DisplayMultiplexer @[Display.scala 18:23]
    dispMux.clock <= clock
    dispMux.reset <= reset
    dispMux.io.cans <= io.cans @[Display.scala 19:19]
    node _dispMux_io_price_T = bits(io.price, 4, 0) @[Display.scala 22:31]
    dispMux.io.price <= _dispMux_io_price_T @[Display.scala 22:20]
    node _T = gt(io.sum, UInt<7>("h63")) @[Display.scala 23:15]
    when _T : @[Display.scala 23:22]
      dispMux.io.sum <= UInt<7>("h63") @[Display.scala 24:20]
    else :
      dispMux.io.sum <= io.sum @[Display.scala 26:20]
    io.seg <= dispMux.io.seg @[Display.scala 30:10]
    io.an <= dispMux.io.an @[Display.scala 31:9]

